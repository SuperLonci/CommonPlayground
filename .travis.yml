stages:
- build-backend
- build-frontend
- test-backend
- test-frontend
- deploy-backend
- deploy-frontend
- send-coverage
env:
  global:
  - ANDROID_API_LEVEL=28
  - ANDROID_BUILD_TOOLS_VERSION=28.0.3
  - ANDROID_API_LEVEL_UI_TESTS=21
  - ANDROID_BUILD_TOOLS_VERSION_UI_TESTS=21.0.3
jobs:
  include:
  - stage: build-backend
    language: java
    script:
    - "(cd backend/; ./gradlew assemble)"

  - stage: build-frontend
    language: android
    android:
      components:
      - build-tools-$ANDROID_BUILD_TOOLS_VERSION
      - android-$ANDROID_API_LEVEL
    script:
    - "(cd frontend/; ./gradlew assembleDebug)"
  
  
    - stage: test-backend
      language: java
      script:
        - cd backend/ 
        # Run unit tests
        - ./gradlew test clean
    - stage: test-frontend
      language: android
      android:
        components:
          - build-tools-$ANDROID_BUILD_TOOLS_VERSION_UI_TESTS
          - android-$ANDROID_API_LEVEL_UI_TESTS
          - build-tools-$ANDROID_BUILD_TOOLS_VERSION
          - android-$ANDROID_API_LEVEL
          - add-on
          - extra
          - sys-img-armeabi-v7a-android-$ANDROID_API_LEVEL_UI_TESTS
      before_script:
        # start Android Emulator
        - cd frontend/
        - android list targets
        - echo no | android create avd --force -n test -t android-$ANDROID_API_LEVEL_UI_TESTS --abi default/armeabi-v7a
        - emulator -avd test -no-window &
        - android-wait-for-emulator
        - adb shell settings put global window_animation_scale 0 &
        - adb shell settings put global transition_animation_scale 0 &
        - adb shell settings put global animator_duration_scale 0 &
        - adb shell input keyevent 82 &
      script:
        # Run unit tests
        - ./gradlew test 
        # Run UI tests
        - ./gradlew build connectedCheck

  
  - stage: deploy-backend
    if: branch = master
    language: java
    services:
    - docker
    provider: heroku
    script:
    - cd backend/
    - "./gradlew build docker"
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PW
    - docker push commonplayground/commonplayground
    - docker logout
    - heroku container:login
    - docker tag commonplayground/commonplayground:latest registry.heroku.com/commonplayground/web
    - docker push registry.heroku.com/commonplayground/web
    - heroku container:release web -a commonplayground
  
  - stage: deploy-frontend
    language: android
    android:
      components:
      - build-tools-$ANDROID_BUILD_TOOLS_VERSION
      - android-$ANDROID_API_LEVEL
    script:
    - cd frontend/
    - openssl aes-256-cbc -K $encrypted_ba187bd0e4a1_key -iv $encrypted_ba187bd0e4a1_iv -in ../keystore.jks.enc -out keystore.jks -d
    - "./gradlew assembleRelease"
    #after_success: echo "Publish release build ti github releases"
    before_deploy:
      - echo "Start Deployment"
      - export APP_VERSION=$(./gradlew :app:printVersionName)
    deploy:
    - provider: releases
      api_key: $GITHUB_TOKEN
      file: app/build/outputs/apk/release/app-release.apk
      file_glob: true
      skip_cleanup: true
      overwrite: true
      name: "$APP_VERSION"
      tag_name: "$APP_VERSION"
      on:
        branch: master

        #CPG-215_cd_frontedn OR 
        #tags: false
        #after_success:
    #  - echo "EXEC Script"
    #  - ./set_tags.sh

  - stage: send-coverage
    language: java
    script:
    - cd backend/
    - "./gradlew build"
    - "./gradlew jacocoTestReport"
    - "./gradlew sendCoverageToCodacy"